bemio Overview
==============
bemio provides two capabilities:

	#. **Mesh visualization and conversion:** The :mod:`bemio.mesh_utilities` module provides the capability to read, visualization, and convert between the different mesh formats that are used by WAMIT, NEMOH, and AQWA.
	#. **BEM data reader, processor, and writer:** THe ``bemio.io`` module provides the ability to read output data from WAMIT, NEMOH, and AQWA. In addition, the module processes the data by dimensioning the hydrodynamic coefficients, calculating impulse response functions, and state space realization coefficients. The processed data is then saved in a standardized HDF5 file.

bemio.mesh_utilities: Mesh Visualization and Conversion
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The :mod:`bemio.mesh_utilities` has three main functions that the user interacts with

bemio.io: BEM Data Readers
~~~~~~~~~~~~~~~~~~~~~~~~~~
This section demonstrates how to interact with the :mod:`bemio.io` objects that can read NEMOH, WAMIT, and AQWA data output files. We use the :mod:`bemio.io.wamit` WAMIT reader to demonstrate functionality. Examples of how to read NEMOH and AWWA data can be found in the :ref:`Tutorials` section.
Reading Data
------------


Users can load data by interacting with the :mod:`bemio.io.nemoh`, :mod:`bemio.io.wamit`, and :mod:`bemio.io.aqwa` modules. The first step is to load the desired module into the Python. Below it is shown how to import the :mod:`bemio.io.wamit` module and  read in WAMIT simulation results:

	# Import WAMTI module
	from wamit.io import wamit  
	
	# Read data from a WAMIT .out file into the wamit_data object
	wamit_data_obj = wamit.WamitOutput(out_file='./tutorials/wamit/data/rm3.out')


Calculating Impulse Response Functions and Sate Space Coefficients
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Once the data is loaded into one of the mod:`bemio.io` data objects, the impulse response function and state space hydrodynamic coefficients can be calculated using the :meth:`calc_irf` and :meth:`calc_ss` methods::


.. _standard_data_format:

Writing the Data to the SHDF
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
As previously discussed, the SHDF provides a consistent format to store BEM simulation data from NEMOH, WAMT, AQWA, and user defined hydrodynamic data. The SHDF uses the `Hierarchical Data Format 5 (HDF5) <http://www.hdfgroup.org/HDF5/>`_, a data structure that is similar to a computers file system, to store complex data in a robust and clear fashion. HDF5 files can be easily viewed and modified with `HDF5VIEW <http://www.hdfgroup.org/products/java/hdfview/>`_.

`WEC-Sim <https://github.com/WEC-Sim/WEC-Sim>`_ uses the SHDF as an input file for hydrodynamic data used in wave energy converter simulations.

Once data is loaded read into a data object, the :meth:`write_hdf5` function can be used to write the data to a SHDF file::

	# Import the bem module
	import bemio.data_structures.bem as bem 

	# Write the data to a SHDF file named shdf_example.h5
	bem.write_hdf5(data=nemoh_data_obj.data, out_file='shdf_example.h5')

Once the data is written to the HDF5 file, it can be viewed using HDFVIEW. The figure below shows the structure of the SHDF produced by `bemio` from the NEMOH data. Note that the NEMOH simulation was of a two-body point absorber.

.. figure::  _static/rm3_hdf5.png
   :align:   center
   :width: 600pt

As shown in the figure above above, the SHDF contains three top levels:

	``bem_data``: 
		This folder contains the raw and unprocessed output data files from the BEM code
	``bodyN``: 
		The folders named ``body1``, ``body2``, ... ``bodyN`` contain the processed data for that body. In the case above there are two bodies, corresponding to the two bodies of the two body point absorber. Notice that the folders beneath each ``bodyN`` folder contains the hydrodynamic data for that body.
	``simulatino_parameters``: 
		This data structure contains simulation parameters from the BEM simulation that are independent of the body number. For example, the ``water_depth`` variable contains the water depth used during the BEM simulation

It goes without saying the the SHDF only contains information that is contained within the BEM simulation output files and SHDF files are generated by the `bemio`. It is also possible to manually create SHDF files for use as input to the WEC-Sim code, although this procedure is not described in this Users Guide.